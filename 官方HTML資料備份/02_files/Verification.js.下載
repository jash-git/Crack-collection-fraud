

function Test_Email(input) {
    var myreg = /^[^\[\]\(\)\\<>:;,@.]+[^\[\]\(\)\\<>:;,@]*@[a-z0-9A-Z]+(([.]?[a-z0-9A-Z]+)*[-]*)*[.]([a-z0-9A-Z]+[-]*)+$/g;
    if (myreg.test(input) == false) {
        return false
    } else
        return true;
}


function Test_ID(input) {

    if (input.length != 10) {
        return false;
    }
    // 依照字母的編號排列，存入陣列備用。
    var letters = new Array('A', 'B', 'C', 'D',
        'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M',
        'N', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
        'X', 'Y', 'W', 'Z', 'I', 'O');
    // 儲存各個乘數
    var multiply = new Array(1, 9, 8, 7, 6, 5,
        4, 3, 2, 1);
    var nums = new Array(2);
    var firstChar;
    var firstNum;
    var lastNum;
    var total = 0;
    // 撰寫「正規表達式」。第一個字為英文字母，
    // 第二個字為1或2，後面跟著8個數字，不分大小寫。
    var regExpID = /^[a-z](1|2)\d{8}$/i;
    // 使用「正規表達式」檢驗格式
    if (input.search(regExpID) == -1) {
        // 基本格式錯誤
        return false;
    } else {
        // 取出第一個字元和最後一個數字。
        firstChar = input.charAt(0).toUpperCase();
        lastNum = input.charAt(9);
    }
    // 找出第一個字母對應的數字，並轉換成兩位數數字。
    for (var i = 0; i < 26; i++) {
        if (firstChar == letters[i]) {
            firstNum = i + 10;
            nums[0] = Math.floor(firstNum / 10);
            nums[1] = firstNum - (nums[0] * 10);
            break;
        }
    }
    // 執行加總計算
    for (var i = 0; i < multiply.length; i++) {
        if (i < 2) {
            total += nums[i] * multiply[i];
        } else {
            total += parseInt(input.charAt(i - 1)) *
                multiply[i];
        }
    }
    // 和最後一個數字比對
    if (((10 - (total % 10)) % 10) != lastNum) {
        return false;
    }
    return true;
}

function Test_CompanyNo(idvalue) {
    var tmp = new String("12121241");
    var sum = 0;
    re = /^\d{8}$/;
    if (!re.test(idvalue)) {
        return false;
    }
    for (i = 0; i < 8; i++) {
        s1 = parseInt(idvalue.substr(i, 1));
        s2 = parseInt(tmp.substr(i, 1));
        sum += cal(s1 * s2);
    }
    if (!valid(sum)) {
        if (idvalue.substr(6, 1) == "7") return (valid(sum + 1));
    }
    return (valid(sum));
}
function valid(n) {
    return (n % 10 == 0) ? true : false;
}
function cal(n) {
    var sum = 0;
    while (n != 0) {
        sum += (n % 10);
        n = (n - n % 10) / 10;  // 取整數
    }
    return sum;
}
function Test_RPN(input)
{
    if (Test_Old_RPN(input) || Test_New_RPN(input))
    {
        return true;
    }
    return false;
}
function Test_Old_RPN(studIdNumber) {
    //驗證填入身分證字號長度及格式
    if (studIdNumber.length !== 10) {
        return false;
    }
    //格式，用正則表示式比對第一個字母是否為英文字母
    if (isNaN(studIdNumber.substr(2, 8)) ||
        (!/^[A-Z]$/.test(studIdNumber.substr(0, 1))) ||
        (!/^[A-Z]$/.test(studIdNumber.substr(1, 1)))) {
        return false;
    }

    var idHeader = "ABCDEFGHJKLMNPQRSTUVXYWZIO"; //按照轉換後權數的大小進行排序
    //這邊把身分證字號轉換成準備要對應的
    studIdNumber = (idHeader.indexOf(studIdNumber.substring(0, 1)) + 10) +
        '' + ((idHeader.indexOf(studIdNumber.substr(1, 1)) + 10) % 10) + '' + studIdNumber.substr(2, 8);
    //開始進行身分證數字的相乘與累加，依照順序乘上1987654321

    s = parseInt(studIdNumber.substr(0, 1)) +
        parseInt(studIdNumber.substr(1, 1)) * 9 +
        parseInt(studIdNumber.substr(2, 1)) * 8 +
        parseInt(studIdNumber.substr(3, 1)) * 7 +
        parseInt(studIdNumber.substr(4, 1)) * 6 +
        parseInt(studIdNumber.substr(5, 1)) * 5 +
        parseInt(studIdNumber.substr(6, 1)) * 4 +
        parseInt(studIdNumber.substr(7, 1)) * 3 +
        parseInt(studIdNumber.substr(8, 1)) * 2 +
        parseInt(studIdNumber.substr(9, 1));

    //檢查號碼 = 10 - 相乘後個位數相加總和之尾數。
    checkNum = parseInt(studIdNumber.substr(10, 1));
    //模數 - 總和/模數(10)之餘數若等於第九碼的檢查碼，則驗證成功
    ///若餘數為0，檢查碼就是0
    if ((s % 10) === 0 || (10 - s % 10) === checkNum) {
        return true;
    }
    else {
        return false;
    }
}
function Test_New_RPN(studIdNumber) {

    //驗證填入身分證字號長度及格式
    if (studIdNumber.length !== 10) {
        return false;
    }
    //格式，用正則表示式比對第一個字母是否為英文字母
    if (isNaN(studIdNumber.substr(2, 8)) ||
        (!/^[A-Z]$/.test(studIdNumber.substr(0, 1))) ||
        (!/^[8-9]$/.test(studIdNumber.substr(1, 1)))) {
        return false;
    }

    var lastNum = parseInt(studIdNumber.substr(9, 1))

    var idHeader = "ABCDEFGHJKLMNPQRSTUVXYWZIO"; //按照轉換後權數的大小進行排序
    //這邊把身分證字號轉換成準備要對應的
    studIdNumber = (idHeader.indexOf(studIdNumber.substring(0, 1)) + 10) +
        '' + studIdNumber.substr(1, 8);
    //console.log('studIdNumber=' + studIdNumber);
    //開始進行身分證數字的相乘與累加，依照順序乘上1987654321
    s = parseInt(studIdNumber.substr(0, 1)) +
        parseInt(studIdNumber.substr(1, 1)) * 9 +
        (parseInt(studIdNumber.substr(2, 1)) * 8 % 10) +
        (parseInt(studIdNumber.substr(3, 1)) * 7 % 10)+
        (parseInt(studIdNumber.substr(4, 1)) * 6 % 10) +
        (parseInt(studIdNumber.substr(5, 1)) * 5 % 10)+
        (parseInt(studIdNumber.substr(6, 1)) * 4 % 10)+
        (parseInt(studIdNumber.substr(7, 1)) * 3 % 10)+
        (parseInt(studIdNumber.substr(8, 1)) * 2 % 10)+
        parseInt(studIdNumber.substr(9, 1));
    //console.log('s=' + parseInt(studIdNumber.substr(0, 1)) + "+" +
    //    parseInt(studIdNumber.substr(1, 1)) * 9 + "+" +
    //    (parseInt(studIdNumber.substr(2, 1)) * 8 % 10) + "+" +
    //    (parseInt(studIdNumber.substr(3, 1)) * 7 % 10)+ "+" +
    //    (parseInt(studIdNumber.substr(4, 1)) * 6 % 10)+ "+" +
    //    (parseInt(studIdNumber.substr(5, 1)) * 5 % 10) + "+" +
    //    (parseInt(studIdNumber.substr(6, 1)) * 4 % 10)+ "+" +
    //    (parseInt(studIdNumber.substr(7, 1)) * 3 % 10)+"+"+
    //    (parseInt(studIdNumber.substr(8, 1)) * 2 % 10)+ "+" +
    //    parseInt(studIdNumber.substr(9, 1)) + "=" +s);
        
    //檢查號碼 = 10 - 相乘後個位數相加總和之尾數。
    var checkNum
    if (s % 10 != 0)
        checkNum = 10 - (s % 10);
    else
        checkNum = 0;
    if (checkNum === lastNum)
        return true;

    return false;
}
function Test_Phone(input) {
    var InputIsInt = 0;
    for (var i = 0; i < input.length; i++) {
        if (Number.isInteger(parseInt(input.charAt(i)))) {
            InputIsInt++;
        }
    }
    if (InputIsInt >= 7)
        return true;
    return false;
}


